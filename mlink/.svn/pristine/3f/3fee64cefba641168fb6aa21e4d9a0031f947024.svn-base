<?php

define('AFF_NAME', AFFILIATE_NAME);
define('API_KEY', 'LlGC5ZPTT3ofiWfi');
define('FILE_FORMAT',"{createtime}\t{updatetime}\t{sales}\t{commission}\t{idinaff}\t{programname}\t{sid}\t{orderid}\t{clicktime}\t{tradeid}\t{tradestatus}\t{oldcur}\t{oldsales}\t{oldcommission}\t{tradetype}\t{referrer}\t{cancelreason}");

if(defined('START_TIME') && defined('END_TIME')) {
    $end_dt   = date('Y-m-d', strtotime(END_TIME));
    $begin_dt = date('Y-m-d', strtotime(START_TIME));
} else {
    $end_dt   = date('Y-m-d');
    $begin_dt = date('Y-m-d', strtotime('-30 days'));
}
echo "Date setting: ST:{$begin_dt} ET:{$end_dt} \n";

$file_temp = PATH_TMP . '/' . AFF_NAME . '.tmp';

//get transaction count
$args = array(
    'dateFrom' => strtotime($begin_dt),
    'dateTo' => strtotime($end_dt),
    'limit' => 1,
    'skip' => 0,
    'count' => 1,
);

$date_arr = get_date_range_arr($begin_dt, $end_dt, '7 days');

foreach ($date_arr as $val){
    $start_date = $val['start_dt'];
    $end_date = $val['end_dt'];

    $page = 1;
    $HasNextPage = true;
    while ($HasNextPage) {
        if (file_exists($file_temp)) {
            unlink($file_temp);
        }
        $fw = fopen($file_temp, 'w');
        if (!$fw) {
            echo "File open failed {$file_temp}";
            exit;
        }

        $url = "https://api.actionpay.net/en/apiWmStats/?key=".API_KEY."&format=json&from=$start_date&till=$end_date&page=$page";
        $ch = curl_init($url);
        $curl_opts = array(
            CURLOPT_HEADER => false,
            CURLOPT_NOBODY => false,
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_FOLLOWLOCATION => true,
            CURLOPT_SSL_VERIFYPEER => false,
            CURLOPT_SSL_VERIFYHOST => false,
            CURLOPT_FILE => $fw,
            CURLOPT_HTTPHEADER => array('Authorization: Basic ' . base64_encode(API_USER . ':' . API_KEY)),
            CURLOPT_USERAGENT => 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0.2) Gecko/20100101 Firefox/6.0.2',
        );
        curl_setopt_array($ch, $curl_opts);
        echo "req => {$url}\r\n";
        $Response = curl_exec($ch);
        curl_close($ch);
        fclose($fw);

        $fp = file_get_contents($file_temp);
        $fp = json_decode($fp, true);

        if (!isset($fp['result']['actions'])) {
            mydie('Crawl transaction failed !');
        }
        if ($fp['result']['pageCount'] <= $fp['result']['page']) {
            $HasNextPage = false;
        }

        if (!empty($fp['result']['actions'])){
            foreach ($fp['result']['actions'] as $v) {
                $createtime = date('Y-m-d H:i:s', strtotime($v['date']));
                $clicktime = date('Y-m-d H:i:s', strtotime($v['decisionDate']));
                $orderid = $v['apid'];
                $programname = '';
                $TransactionId = $v['uniqueid'];
                $oldcommission = $v['payment'];
                $tradestatus = $v['status']['name'];
                $Curency = $v['paymentCurrency'];
                $tradetype = '';
                $referrer = '';
                $ProgramId = '';
                $oldsales = (!empty($v['price']))?$v['price']:'';
                $Sid = $v['subaccount'];
                $tdate = date("Y-m-d",strtotime($createtime));
                $Curency = $Curency == 'RUR'? 'RUB' : $Curency;
                $cur_exr = cur_exchange($Curency, 'USD',$tdate);
                $sales = $oldsales>0?round($oldsales * $cur_exr, 4):0;
                $Commission = $oldcommission>0?round($oldcommission * $cur_exr, 4):0;
                $cancelreason = trim($v['status']['reason']['name']);

                $replace_array = array(
                    '{createtime}'      => trim($createtime),
                    '{updatetime}'      => trim($createtime),
                    '{sales}'           => $sales,
                    '{commission}'      => $Commission,
                    '{idinaff}'         => $ProgramId,
                    '{programname}'     => trim($programname),
                    '{sid}'             => trim($Sid),
                    '{orderid}'         => trim($orderid),
                    '{clicktime}'       => trim($clicktime),
                    '{tradeid}'         => trim($TransactionId),
                    '{tradestatus}'     => trim($tradestatus),
                    '{oldcur}'          => $Curency,
                    '{oldsales}'        => $oldsales,
                    '{oldcommission}'   => $oldcommission,
                    '{tradetype}'       => trim($tradetype),
                    '{referrer}'        => $referrer,
                    '{cancelreason}'    => $cancelreason,
                );
                $rev_file = PATH_DATA . '/' . AFF_NAME . '/revenue_' . str_replace('-', '', $tdate) . '.upd';
                if (!isset($fws[$rev_file])) {
                    $fws[$rev_file] = fopen($rev_file, 'w');
                }

                fwrite($fws[$rev_file], strtr(FILE_FORMAT,$replace_array) . "\n");
            }
        }
        $page ++;
    }
}

foreach ($fws as $file => $f) {
    fclose($f);
}

function get_date_range_arr($startDate,$endDate,$range,$format='Y-m-d'){
    $startDate = date('Y-m-d',strtotime($startDate));
    $endDate = date('Y-m-d',strtotime($endDate));
    $d = new DateTime($startDate);

    $return_d = array();

    while($d->format('Y-m-d') <= $endDate){

        $start_dt = $d->format($format);
        $d->modify('+'.$range);
        if($d->format('Y-m-d') > $endDate){
            $end_dt = date($format,strtotime($endDate));
        }else{
            $end_dt = $d->format($format);
        }
        $d->modify('+1 day');

        $return_d[] = array('start_dt'=>$start_dt,'end_dt'=>$end_dt);
    }
    return $return_d;
}

?>
